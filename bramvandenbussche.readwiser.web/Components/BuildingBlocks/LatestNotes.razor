@using bramvandenbussche.readwiser.domain.Model
@using bramvandenbussche.readwiser.domain.Interface.Business
@inject IHighlightService Service
@inject ILogger<LatestNotes> Logger


<div class="row">
    <div class="col-4">
        <h3>Latest Notes</h3>
    </div>
    <div class="col-2 offset-6">
        <div class="input-group mb-2">
            <input type="number" class="form-control" @bind="@_maxNotes" />
            <button class="btn btn-primary" @onclick="() => OnInitializedAsync()">Refresh</button>
        </div>
    </div>
</div>

@if (_recentNotes == null)
{
    <EmptyDatabaseWarnin />
}
else
{
    if (_recentNotes.Length == 0)
    {
        <p><em>No notes found</em></p>
    }

    @foreach (var note in _recentNotes)
    {
        <SingleNote Highlight="@note" ShowBookDetails="true" KnownTags="_knownTags" />
    }
}


@code {
    private Highlight[]? _recentNotes;

    private int _maxNotes = 5;

    private List<string>? _knownTags = default;

    protected override async Task OnInitializedAsync()
    {
        Logger.LogInformation("Loading latest notes");
        _recentNotes = null;
        _recentNotes = (await Service.GetRecentHighlights(_maxNotes)).ToArray();
        Logger.LogInformation($"{_recentNotes.Length} notes loaded");

        Logger.LogInformation("Loading known tags");
        _knownTags = await Service.GetAllTags();
        Logger.LogInformation($"{_knownTags.Count} known tags loaded");
    }
}